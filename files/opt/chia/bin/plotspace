#!/usr/bin/env python3

from os import environ as ENV
from sys import argv

from plumbum import local as sh

sort_percent = True if "--percent" in argv else False
all = True if "--all" in argv or "-a" in argv else False
# If we want to list only the syncsrc dirs.
syncsrc = True if "--syncsrc" in argv else False
src_dirs = []
sync_config = sh['cat'][ENV["CHIA_SYNC"]]().strip().split('\n')
src_dirs = [sync.split(',')[0] for sync in sync_config]



def convert_to_gb(space):
    if space.endswith('T'):
        space = float(space[:-1]) * 1024
    elif space.endswith('G'):
        space = float(space[:-1])
    elif space.endswith('M'):
        space = float(space[:-1]) / 1024
    elif space.endswith('K'):
        space = float(space[:-1]) / 1024 / 1024
    else:
        space = 0.0
    return space

def get_available_space():
    fs_usage = sh['sudo']['df']['-h']().strip().split('\n')
    results = []

    for usage in fs_usage:
        usage = usage.split(' ')
        usage = list(filter(lambda u: u, usage))
        mountpoint = usage[5]
        total_size = convert_to_gb(usage[1])
        space_available = convert_to_gb(usage[3])
        percent_used = usage[4]


        if len(list(filter(lambda f: f.rstrip("/farm") == mountpoint, src_dirs))) > 0:
            if syncsrc or space_available > 110:
                results.append(f"{space_available},{mountpoint},{percent_used}")
        #
        # elif all or (total_size > 400 and space_available > 110):
        #     results.append(f"{space_available},{mountpoint},{percent_used}")


    return results

def main():
  disk_space = get_available_space()
  if sort_percent:
      sorted_list = sorted(disk_space, key=lambda disk: int(disk.split(',')[2][:-1]))
  else:
      sorted_list = sorted(disk_space, key=lambda disk: float(disk.split(',')[0]))
  for u in sorted_list:
    print(u)

if __name__ == '__main__':
  main()
